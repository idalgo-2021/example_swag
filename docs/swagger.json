{
    "swagger": "2.0",
    "info": {
        "description": "API description",
        "title": "Example API(by idalgo-2021)",
        "contact": {
            "name": "Michael G.",
            "url": "https://github.com/idalgo-2021",
            "email": "sample@email.com"
        },
        "version": "1.0"
    },
    "host": "localhost:8080",
    "basePath": "/",
    "paths": {
        "/items": {
            "get": {
                "description": "Get a list of all items",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "items"
                ],
                "summary": "Get all items",
                "responses": {
                    "200": {
                        "description": "List of items",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Item"
                            }
                        }
                    },
                    "404": {
                        "description": "No items available",
                        "schema": {
                            "$ref": "#/definitions/models.Error"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new item by providing a name",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "items"
                ],
                "summary": "Create a new item",
                "parameters": [
                    {
                        "description": "Item details",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.ItemRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "ID of the created item",
                        "schema": {
                            "$ref": "#/definitions/models.ItemResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid input",
                        "schema": {
                            "$ref": "#/definitions/models.Error"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/models.Error"
                        }
                    }
                }
            }
        },
        "/items/{id}": {
            "get": {
                "description": "Get the item with the specified ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "items"
                ],
                "summary": "Get an item by its ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Item ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Item description",
                        "schema": {
                            "$ref": "#/definitions/models.Item"
                        }
                    },
                    "404": {
                        "description": "Item not found",
                        "schema": {
                            "$ref": "#/definitions/models.Error"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "models.Error": {
            "description": "Error structure",
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                }
            }
        },
        "models.Item": {
            "description": "Item's description",
            "type": "object",
            "properties": {
                "create_time": {
                    "description": "@example field tag используется для примера значений",
                    "type": "string",
                    "example": "2024-08-21T14:00:00Z"
                },
                "id": {
                    "description": "@example field tag используется для примера значений",
                    "type": "string",
                    "example": "1"
                },
                "name": {
                    "description": "@example field tag используется для примера значений",
                    "type": "string",
                    "example": "TV-set"
                }
            }
        },
        "models.ItemRequest": {
            "description": "Item creation request",
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                }
            }
        },
        "models.ItemResponse": {
            "description": "Item response",
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                }
            }
        }
    }
}